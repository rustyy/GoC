<?php

/**
 * Implements hook_menu().
 * @return array
 */
function export_node_menu() {
  $items = array();

  $items['export/node/%'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => '_export_node_callback',
    'page arguments' => array(2),
    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Export node page callback.
 * Returns json for a specific node.
 * @param null $arg
 */
function _export_node_callback($arg = NULL) {
  $node = node_load($arg);
  $lang = $node->language;

  // Exit if node does not exist or is not published.
  if (!$node || $node->status == 0) {
    return drupal_json_output(array('Access denied'));
  }

  // Get the node before the current.
  $q = "SELECT n.nid
        FROM {node} n
        JOIN {field_data_field_rubric} r
        ON n.nid = r.entity_id
        WHERE r.field_rubric_tid = :tid AND n.created < :created
        LIMIT 1";
  $result = db_query($q, array(':tid' => $node->field_rubric[$lang][0]['tid'], ':created' => $node->created));
  $prev_nid = $result->fetchAssoc();

  // Get the node posted after the current one.
  $q = "SELECT n.nid
        FROM {node} n
        JOIN {field_data_field_rubric} r
        ON n.nid = r.entity_id
        WHERE r.field_rubric_tid = :tid AND n.created > :created
        LIMIT 1";
  $result = db_query($q, array(':tid' => $node->field_rubric[$lang][0]['tid'], ':created' => $node->created));
  $next_nid = $result->fetchAssoc();

  // Prepare json.
  $json = array(
    'headline' => $node->title,
    'kicker' => $node->field_kicker[$lang][0]['safe_value'],
    'body' => $node->body[$lang][0]['safe_value'],
  );

  if (!empty($prev_nid)) {
    $json['prev_nid'] = $prev_nid;

  }
  if (!empty($next_nid)) {
    $json['next_nid'] = $next_nid;
  }

  return drupal_json_output($json);
}
