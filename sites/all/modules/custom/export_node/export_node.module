<?php

/**
 * Implements hook_menu().
 * @return array
 */
function export_node_menu() {
  $items = array();

  $items['node/%/export'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => '_export_node_callback',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );
  $items['export_nodes/%'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => '_export_nodes_callback',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Export node page callback.
 * Returns json for a specific node.
 * @param null $arg
 */
function _export_node_callback($arg = NULL) {
  $node = node_load($arg);

  // Exit if node does not exist or is not published.
  if (!$node || $node->status == 0) {
    drupal_json_output(array('Access denied'));
    drupal_exit();
  }

  $lang = $node->language;
  $ids = array();
  $images = array();

  // Get the image.
  foreach ($node->field_media_image[$lang] as $k) {
    $ids[] = $k['value'];
  }

  $fc_items = field_collection_item_load_multiple($ids);
  foreach ($fc_items as $k => $v) {
    $img_vars = array(
      'style_name' => 'mobile_1',
      'path' => $v->field_fc_image[$lang][0]['uri'],
      'alt' => $v->field_fc_image[$lang][0]['alt'] . ' - Foto: ' . $v->field_fc_copyright[$lang][0]['safe_value'],
      'title' => $v->field_fc_image[$lang][0]['title'] . ' - Foto: ' . $v->field_fc_copyright[$lang][0]['safe_value'],
    );

    $image = theme_image_style($img_vars);
    $images[] = array(
      'image' => $image,
      'caption' => $v->field_fc_headline[$lang][0]['safe_value'],
      'copyright' => $v->field_fc_copyright[$lang][0]['safe_value'],
    );
  }

  // Get the node before the current.
  $q = "SELECT n.nid
        FROM {node} n
        JOIN {field_data_field_rubric} r
        ON n.nid = r.entity_id
        WHERE r.field_rubric_tid = :tid AND n.created < :created
        LIMIT 1";
  $result = db_query($q, array(':tid' => $node->field_rubric[$lang][0]['tid'], ':created' => $node->created));
  $prev_nid = $result->fetchAssoc();

  // Get the node posted after the current one.
  $q = "SELECT n.nid
        FROM {node} n
        JOIN {field_data_field_rubric} r
        ON n.nid = r.entity_id
        WHERE r.field_rubric_tid = :tid AND n.created > :created
        LIMIT 1";
  $result = db_query($q, array(':tid' => $node->field_rubric[$lang][0]['tid'], ':created' => $node->created));
  $next_nid = $result->fetchAssoc();

  // Prepare json.
  $json = array(
    'images' => $images,
    'headline' => $node->title,
    'kicker' => $node->field_kicker[$lang][0]['safe_value'],
    'body' => $node->body[$lang][0]['safe_value'],
  );

  if ($prev_nid) {
    $json['prev_nid'] = $prev_nid['nid'];
  }
  if ($next_nid) {
    $json['next_nid'] = $next_nid['nid'];
  }

  drupal_json_output($json);
  drupal_exit();
}

/**
 * Export nodes callback.
 * Generates json output with nodes by category.
 * @param string $arg
 */
function _export_nodes_callback($arg = 'all') {
  $node = '';
  $lang = '';
  $image = '';
  $copyright = '';
  $alt = '';
  $title = '';

  if ($arg == 'all') {
    $q = "SELECT n.nid
        FROM {node} n
        JOIN {field_data_field_rubric} r
        ON n.nid = r.entity_id";
  }
  else {
    $q = "SELECT n.nid
        FROM {node} n
        JOIN {field_data_field_rubric} r
        ON n.nid = r.entity_id
        WHERE r.field_rubric_tid = :tid";
  }

  $result = db_query($q, array(':tid' => $arg));
  $json = array();

  foreach ($result as $record) {
    $node = node_load($record->nid);
    $lang = $node->language;
    $image = field_collection_item_load($node->field_media_image[$lang][0]['value']);

    if (!empty($image->field_fc_copyright[$lang][0]['safe_value'])) {
      $copyright = ' - Foto' . $image->field_fc_copyright[$lang][0]['safe_value'];
    }

    if (!empty($image->field_fc_image[$lang][0]['alt'])) {
      $alt = $image->field_fc_image[$lang][0]['alt'];
    }

    if (!empty($image->field_fc_image[$lang][0]['title'])) {
      $title = $image->field_fc_image[$lang][0]['title'];
    }

    $img_vars = array(
      'style_name' => 'mobile_1',
      'path' => $image->field_fc_image[$lang][0]['uri'],
      'alt' => $alt . $copyright,
      'title' => $title . $copyright,
      'width' => '',
      'height' => '',
    );
    $image = theme_image_style($img_vars);

    $json[] = array(
      'image' => $image,
      'headline' => $node->title,
      'kicker' => $node->field_kicker[$lang][0]['safe_value'],
    );
  }
  drupal_json_output($json);
  drupal_exit();
}
